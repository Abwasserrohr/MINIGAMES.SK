#
# ==============
# mgStartSidebarProcess.sk
# ==============
# mgStartSidebarProcess.sk is part of the MINIGAMES.SK library.
# ==============

#
# > Periodical Event
# > Runs every second to check for the running scoreboard sidebar.
# > If a sidebar update hasn't been created or updated in the last 5
# > seconds, the sidebar process will be restarted for the player.
every 1 second:
  loop all players:
    delete {_sidebarupdate}
    set {_sidebarupdate} to metadata value "MG.SK|LASTSIDEBARUPDATE|%loop-player%" of getDummy()
    if {_sidebarupdate} is set:
      if difference between {_sidebarupdate} and now is more than 5 seconds:
        mgStartSidebarProcess(loop-player)
    else:
      mgStartSidebarProcess(loop-player)

on load:
  set metadata value "MG.SK|SIDEBARRUNID" of getDummy() to getRandomUUID()

#
# > Function - mgStartSidebarProcess
# > Starts a while loop that displays a detailed information view
# > on the sidebar of the client. Stops once player is offline.
# > Parameters:
# > <player>the player who should see the sidebar until disconnect
function mgStartSidebarProcess(player:player):
  set {_processuuid} to metadata value "MG.SK|SIDEBARRUNID" of getDummy()
  while {_player} is online:
    set {_lang} to getClientLanguage({_player})
    if metadata value "MG.SK|SIDEBARRUNID" of getDummy() is not {_processuuid}:
      stop
    if mgGetCurrentGame() is not {_game}:
      set {_sidebarspacer} to "&7&m                                 "
      set {_scoreboard} to createNewScoreboard(" ","SIDEBAR")
      set {_game} to mgGetCurrentGame()
      set {_gametranslation} to mgGetTranslation({_lang},{_game},"name",null)
      set {_animated::*} to mgCreateAnimatedTextList("MINIGAMES >> %{_gametranslation}%","&6&l&n","&e&l","fillshine")

      setScoreboardTeam({_scoreboard},"%{_sidebarspacer}%",90)
      setScoreboardTeam({_scoreboard},"%{_sidebarspacer}%",1)

    loop {_animated::*}:
      #
      # > Create a unused slots list to remove unused slots from the teams
      # > that would otherwise be kept within the scoreboard.
      loop 14 times:
        set {_number} to loop-number + 36
        set {_unusedslots::%{_number}%} to true

      set metadata value "MG.SK|LASTSIDEBARUPDATE|%{_player}%" of getDummy() to now
      wait 1 ticks

      #
      # > Add the global content of the sidebar to the players sidebar with player specific translation.
      delete {_sidebar}
      set {_sidebar} to metadata value "MG.SK|SIDEBARCONTENT|GLOBAL" of getDummy()
      if {_sidebar} is set:
        loop ...{_sidebar}.keySet():
          set {_translation} to {_sidebar}.get(loop-value-2)
          set {_translation} to mgGetTranslation({_lang},{_translation}.get("game"),{_translation}.get("key"),{_translation}.get("placeholders"))
          set {_id} to "%loop-value-2%" parsed as number
          #
          # > Since this slot has been used, remove it from the unused slots list.
          delete {_unusedslots::%{_id}%}
          setScoreboardTeam({_scoreboard},{_translation},{_id})
      else:
        delete {_game}
      #
      # > Add the personal content of the sidebar to the players sidebar with player specific translation.
      delete {_sidebar}
      set {_sidebar} to metadata value "MG.SK|SIDEBARCONTENT|PLAYER" of getDummy()
      if {_sidebar} is set:
        loop ...{_sidebar}.keySet():
          if loop-value-2 contains "%{_player}%-":
            set {_translation} to {_sidebar}.get(loop-value-2)
            set {_translation} to mgGetTranslation({_lang},{_translation}.get("game"),{_translation}.get("key"),{_translation}.get("placeholders"))
            set {_id} to loop-value-2
            replace all "%{_player}%-" with "" in {_id}
            set {_id} to {_id} parsed as number
            #
            # > Since this slot has been used, remove it from the unused slots list.
            delete {_unusedslots::%{_id}%}
            setScoreboardTeam({_scoreboard},{_translation},{_id})
      #
      # > If the sidebar isn't set, wipe the scoreboard on the next cycle.
      else:
        delete {_game}
      setScoreboardName({_scoreboard},"%loop-value%")

      #
      # > Loop all unused slots that haven't been removed before and
      # > try to remove them.
      loop {_unusedslots::*}:
        set {_unused} to loop-index-2 parsed as int
        removeScoreboardTeam({_scoreboard},{_unused})

      #
      # > Update the scoreboard to the player.
      {_player}.setScoreboard({_scoreboard})
  delete {_scoreboard}
  delete metadata value "MG.SK|LASTSIDEBARUPDATE|%{_player}%" of getDummy()
