#
# ==============
# functions.sk
# ==============
# functions.sk is part of the MINIGAMES.SK library.
# ==============
# > GAME: Spleef
# ==============


function mgSpleefHandler(task:text):
  if {_task} is "start":
    delete {spleef::round}
    mgSetTemporaryGameData("status","loading")

    loop all players:
      mgSetCurrentGamePoints("Spleef",loop-player,"points",0)
    mgSetSidebarToplist("Spleef","points",5,1)

    delete {spleef::playerstatus::*}
    set {MG::playersingame} to number of all players
    mgSpleefStartNewRound("spleefcmd")
  if {_task} is "stop":
    delete {spleef::status}
    delete {spleef::round}
    delete {spleef::playerstatus::*}
    delete {MG::playersingame}
    mgFinishGame()
      
function mgSpleefStartNewRound(t: text):
  set {_tplayers} to 0
  set {_tplayers} to number of all players
  if {_tplayers} is bigger than 1:

    set {MG::playersingame} to number of all players
    mgSetTemporaryGameData("status","preparing")
    add 1 to {spleef::round}

    if {spleef::round} is bigger than 5:
      mgSpleefHandler("stop")
      stop
    broadcast "%getChatPrefix()% Round %{spleef::round}%/5"

    #
    # > Create a fitting arena. Base size 40x40 + 2x2 per player
    set {_mapsize} to 10 + number of all players
    set {_mainarena} to ""
    set {_mainarena} to location at 0.5, 1, 0.5 in mgGetCurrentWorld()
    mgSetTemporaryGameData("respawnloc",location at 0.5, 2, 0.5 in mgGetCurrentWorld())

    loop all blocks in radius 76 around {_mainarena}:
      if y-coordinate of loop-block is 1.5:
        set loop-block to air

    #
    # > Select a random integer for different blocks.
    set {_rng} to random integer between 0 and 7

    #
    # > Set a block depending on the random integer.
    if {_rng} is 0 OR 6 OR 7:
      set {_block} to grass block
      set {spleef::toolcmd} to "minecraft:diamond_shovel{HideFlags:63,Enchantments:[{id:""minecraft:efficiency"",lvl:5s}]} 1"
    if {_rng} is 1:
      set {_block} to packed ice block
      set {spleef::toolcmd} to "minecraft:diamond_pickaxe{HideFlags:63,Enchantments:[{id:""minecraft:efficiency"",lvl:500s}]} 1"
    if {_rng} is 2:
      set {_block} to any leaves
      set {spleef::toolcmd} to "minecraft:shears"
    if {_rng} is 3:
      set {_block} to soul sand
      set {spleef::toolcmd} to "minecraft:diamond_shovel{HideFlags:63,Enchantments:[{id:""minecraft:efficiency"",lvl:5s}]} 1"
    if {_rng} is 4:
      set {_block} to blue concrete
      set {spleef::toolcmd} to "minecraft:diamond_pickaxe{HideFlags:63,Enchantments:[{id:""minecraft:efficiency"",lvl:500s}]} 1"
    if {_rng} is 5:
      set {_block} to any glazed terracotta
      set {spleef::toolcmd} to "minecraft:diamond_pickaxe{HideFlags:63,Enchantments:[{id:""minecraft:efficiency"",lvl:500s}]} 1"
    if {_block} is not set:
      set {_block} to dirt

    loop all blocks in radius {_mapsize} around {_mainarena}:
      add 1 to {_block}
      if {_block} > 5:
        wait 1 tick
        set {_block} to 0
      if y-coordinate of loop-block is 1.5:
        set loop-block to {_block}

    #
    # > Wait for 10 seconds
    mgDisplayBossbarCountdown(10,"Spleef","bossbar_countdown",null)
    
    loop all players:
      apply haste 2 without particles to loop-player for 160 seconds
      apply resistance 12 without particles to loop-player for 3 seconds
      apply invisibility 1 without particles to loop-player for 1 second

      set gamemode of loop-player to survival
      set loop-player's gamemode to survival
      set {_loc} to mgGetTemporaryGameData("respawnloc")
      teleport loop-player to {_loc}
    execute console command "/playsound minecraft:block.note.bell master @a 0 0 0 500 0.5"
    loop all players:
      clear inventory of loop-player
      execute console command "/give %loop-player% %{spleef::toolcmd}%"
    set {_pitch} to 1
    loop 10 times:
      loop all players:
        play sound "block.note_block.pling" with volume 1 with pitch {_pitch} at location of loop-player for loop-player

      add 0.01 to {_pitch}	  
      wait 1 second
    loop all players:
      play sound "block.note_block.pling" with volume 1 with pitch 2 at location of loop-player for loop-player

    #
    # > Give the items to the players.
    mgSetTemporaryGameData("status","ingame")
    set {_rending} to 180
    while mgGetTemporaryGameData("status") is "ingame":
      add 1 to {_roundtime}
      remove 1 from {_rending}
      send action bar "%{_rending}%" to all players
      loop all players:
        if gamemode of loop-player is survival:
          if -500 is bigger than y-coordinate of loop-player:
            damage loop-player by 5 hearts
      if {_roundtime} is bigger than 179:
        mgSetTemporaryGameData("status","exitround")
        mgSpleefStartNewRound("while")
      wait 1 second

  else:
    broadcast "%getChatPrefix()% Not enough players."
    mgSpleefHandler("stop")

function mgSpleefCheckSpleefRoundEnd():
  if {spleef::status} is "ingame":
    if {MG::playersingame} is smaller than 2:
      loop all players:
        set loop-player's health to 40
        if loop-player's gamemode is survival:
          mgAddPlayerToplistWin("Spleef",loop-player,1)
          broadcast "%getChatPrefix()% %loop-player% has won this round."
          mgSetTemporaryGameData("status","preparing")
      mgSpleefStartNewRound("checkspleefroundend")
